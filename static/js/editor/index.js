// Generated by LiveScript 1.3.0
(function(){
  var sdb, watch, lc, init, update;
  getfa('sample').then(function(fs){
    var ed, view;
    fs.writeFileSync('blank', 'hello index.html!');
    ed = new Editor({
      node: {
        edit: '[ld=editor]',
        view: '[ld=viewer]'
      },
      editlet: {},
      renderer: function(arg$){
        var fs, payload, k, v, ret;
        fs = arg$.fs;
        if (!fs) {
          return;
        }
        payload = {
          html: fs.readFileSync(ed.fs.openedFile).toString()
        };
        for (k in payload) {
          v = payload[k];
          ret = transpiler.detect(v);
          if (ret.mod && ret.mod.transform) {
            payload[k] = ret.mod.transform(v);
          }
        }
        return payload;
      }
    });
    ed.setFiles(fs);
    ed.open('blank');
    return view = new ldView({
      root: "[ld-scope=editor]",
      action: {
        click: {
          file: function(arg$){
            var node, fn;
            node = arg$.node;
            fn = node.getAttribute('data-name');
            return init(fn);
          }
        }
      }
    });
  });
  sdb = new sharedbWrapper({
    url: {
      scheme: window.location.protocol.replace(':', ''),
      domain: window.location.host
    }
  });
  watch = function(ops, self){
    var cval, rval;
    if (self) {
      return;
    }
    cval = ed.ed.cm.getValue();
    rval = (lc.doc.data || {})[lc.name];
    if (cval !== rval) {
      (lc.old || (lc.old = {}))[lc.name] = (lc.cur || (lc.cur = {}))[lc.name] = rval;
      cm.setValue(rval || '');
      return render();
    }
  };
  lc = {};
  init = function(key){
    return sdb.get({
      id: key,
      watch: watch
    }).then(function(doc){
      lc.doc = doc;
      lc.old = JSON.parse(JSON.stringify(doc.data));
      lc.cur = JSON.parse(JSON.stringify(doc.data));
      fs.writeFileSync(key, lc.cur);
      ed.open(fn);
      return ed.render();
    })['catch'](function(it){
      return console.log('document open failed: ', it);
    });
  };
  update = function(){
    var val;
    val = ed.ed.cm.getValue();
    if ((lc.cur || (lc.cur = {}))[lc.name] === val) {
      return;
    }
    (lc.cur || (lc.cur = {}))[lc.name] = val;
    lc.doc.submitOp(sdb.json.diff(lc.old, lc.cur));
    return (lc.old || (lc.old = {}))[lc.name] = val;
  };
  return ed.ed.cm.on('change', function(){
    return update();
  });
})();