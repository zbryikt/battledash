extends /base.pug
block vars
  - ctrl.navtop.placeholder = false;
  - ctrl.navtop.shown = true;
  - view = true;
  include /design/data/sample.pug
block head
  +css("https://cdn.jsdelivr.net/npm/handsontable@6.2.2/dist/handsontable.min.css")
  style: :stylus
    .handsontable
      font-size: 14px
      td, th
        vertical-align: middle
        text-align: center
    .form-group
      margin: 0 0 3rem
    .form-group label
      width: 100%
    .card.ok
      border-left: 5px solid #f00
      position: relative
block body
  include /design/mixins/index.pug
  .w-100.h-100(style="padding-top:55px"): #sheet.w-100.h-100.bg-light(style="overflow:scroll")
  //-
    +script("https://cdn.jsdelivr.net/npm/pikaday@1.5.1/pikaday.min.js")
    +script("https://cdn.jsdelivr.net/npm/moment@2.20.1/moment.min.js")
    +script("https://cdn.jsdelivr.net/npm/numbro@2/dist/numbro.min.js")
  +script("https://cdn.jsdelivr.net/npm/handsontable@6.2.2/dist/handsontable.min.js")
  +script("/assets/lib/schulze.js/schulze.min.js")
  script: :lsc
    data = [
       ['編號', '提案', '王小明', '黃小華', '張大千']
       [1,"開放 SaaS 平台",92,76,86],
       [2,"線上資料庫",69,82,85],
       [3,"選舉指南",98,91,96],
       [4,"點對點分散式網路",73,64,78],
       [5,"剩食大平台",73,66,86],
       [6,"求職小幫手",90,79,72],
       [7,"美國台灣觀測協會",90,62,93],
       [8,"國會監視器",72,87,74],
       [9,"協作資料夾 2.0",91,70,90],
       [10,"線上課程平台",75,73,72],
       [11,"協作式筆記系統",66,73,66],
       [12,"剩食資料庫系統",81,63,67],
       [13,"社區食倉",71,66,85],
       [14,"文字工作者大平台",66,96,67],
       [15,"自動逐字稿輔助編寫平台",67,77,77],
       [16,"司法透視鏡 - 一起監督司法",65,80,91],
       [17,"台灣ㄟ姻仔",76,89,71],
       [18,"農業微型監視儀",85,61,75],
       [19,"台灣在地化分散式字點",88,81,100],
       [20,"xota.co 71",18,3,1],
       [21,"從 AM2.5 到 PM2.5",87,77,64],
       [22,"新聞儀表板",61,78,78],
       [23,"山林間測快手",80,72,94],
       [24,"台灣在地化地圖計畫",86,81,90],
       [25,"資訊透明度量表",69,90,85],
       [26,"智慧漸凍人補助器",64,94,70],
       [27,"離職書產生器",99,73,99],
    ];
    d2 = data.map(-> it.slice(1, it.length))
    console.log d2
    {rank, detail} = schulze.from-array d2, {}
    console.log detail

    dom = ld$.find document, '#sheet', 0
    Handsontable.renderers.registerRenderer \myrenderer, (instance, td, row, col, prop, value, cellProperties) -> 
      Handsontable.renderers.TextRenderer.apply @, arguments
      return
      if isNaN(value) or !value => return
      if col > 3 and ((col % 2) or col == 10 or col == 11) =>
        if +value < 3 => td.style.background = \#9f9
        if +value > 25 => td.style.background = \#f99
      if col == 2 =>
        if value > 0 => td.style.background = \#ff0
    /*
    # for raw data
    hot = new Handsontable dom, {
      data: data
      rowHeaders: true
      colHeaders: true
      filters: true
      dropdownMenu: true
      stretchH: \all
      rowHeights: 25
      minRows: 50
      minCols: 15
      colWidths: [50,170,60,60,60],
      fixedRowsTop: 1,
      fixedColumnsLeft: 2,
      cells: (row, col) ->
        cellProperties = {}
        cellProperties.renderer = \myrenderer
        return cellProperties
      customBorders: [
        {
          range: { from : {row: 0, col: 1}, to: {row: 0, col: 1}},
          bottom: {width: 2, color: \#000}, right: {width: 2, color: \#000}
        }
        { range: { from : {row: 0, col: 0}, to: {row: 0, col: 50}}, bottom: {width: 2, color: \#000}}
        { range: { from : {row: 0, col: 1}, to: {row: 50, col: 1}}, right: {width: 2, color: \#000}}
      ]
    }
    */
    Handsontable.renderers.registerRenderer \myrenderer2, (instance, td, row, col, prop, value, cellProperties) -> 
      Handsontable.renderers.TextRenderer.apply @, arguments
      if col > 1 and row < d2.length - 1=>
        if value > 0 => td.style.background = \#9f9
        else if value < 0 => td.style.background = \#f99
        else td.style.background = \#ff9

    hot = new Handsontable dom, {
      data: detail
      rowHeaders: true
      colHeaders: true
      filters: true
      dropdownMenu: true
      stretchH: \all
      rowHeights: 25
      minRows: detail.length
      minCols: detail.length + 2
      colWidths: [40, 150] ++ [0 til detail.length].map -> 20
      cells: (row, col) ->
        cellProperties = {}
        cellProperties.renderer = \myrenderer2
        return cellProperties
    }
